<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[博客修改日志]]></title>
    <url>%2F%E7%94%9F%E6%B4%BB%2F%E5%B7%A5%E5%85%B7%2FBlogLog.html</url>
    <content type="text"><![CDATA[记录本网站Next的所有所有修改 下载Next 6主题最简单的安装方式是直接克隆整个仓库： 12$ cd hexo$ git clone https://github.com/theme-next/hexo-theme-next themes/next 对主题配置文件进行修改在主题目录中找到\themes\next\languages\zh_CN.yml增加 123menu: code: 学习 life: 生活 在主题目录中找到\themes\next\languages\_config.yml 12345menu: home: / || home code: /categories/学习/ || heartbeat life: /categories/生活/ || calendar categories: /categories/ || th 第78行 关闭Hexo支持，和主题 12345678910powered: # Hexo link (Powered by Hexo). enable: false # Version info of Hexo after Hexo link (vX.X.X). version: truetheme: # Theme &amp; scheme info link (Theme - NexT.scheme). enable: false # Version info of NexT after scheme info (vX.X.X). version: true 第496行 还没改以后可以改 1han: false 第839行 设置点击图片可以全屏 fancybox: true 12cd themes/nextgit clone https://github.com/theme-next/theme-next-fancybox3 source/lib/fancybox 第872行 背景动画 12345cd themes/nextgit clone https://github.com/theme-next/theme-next-canvas-nest source/lib/canvas-nestcanvas_nest: enable: true]]></content>
      <categories>
        <category>生活</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客索引]]></title>
    <url>%2F%E7%94%9F%E6%B4%BB%2FBlogIndex.html</url>
    <content type="text"><![CDATA[记录本网站所有的文档，访客可以通过本页面看博客中的所有内容 机器学习入门机器学习入门（一）机器学习入门（二）交通仿真随手记博客修改日志]]></content>
      <categories>
        <category>生活</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>索引</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[报账备忘录]]></title>
    <url>%2F%E7%94%9F%E6%B4%BB%2F%E5%8A%9E%E5%85%AC%2F%E6%8A%A5%E8%B4%A6%E5%A4%87%E5%BF%98.html</url>
    <content type="text"><![CDATA[在计财处报账需要准备的东西 报账时需要有《成信报销单》+发票+刷POS的小票 计财处报账时间：工作日的上午：上午9-11点和下午14-16点 学生代老师去报销需要带上“授权委托书”。 报销单内容： 签名齐全 备注栏需要写，姓名，工资号，和工资卡号。（张** #2848 2360） 公务卡支付的每一笔都需要在备注栏写明刷卡时间和金额 POS单小票贴在对应的发票上面，将所有的发票粘在报销单后 如果报销自行打印的书籍，需要在后面附上该打印书籍的照片。 如果单笔（发票连号，开发票的时间地点公司均一致视为一笔）报销金额超过一万元，则需要带上供销合同复印件。 如果汇款方，和所盖章上的名称有所出入（如收款为某某局盖章为某某编辑部）需要给予纸质证明。（如打印杂志的封面或扉页，找到该杂志由某某局主办）]]></content>
      <categories>
        <category>生活</category>
        <category>办公</category>
      </categories>
      <tags>
        <tag>随手记</tag>
        <tag>计财处</tag>
        <tag>琐碎</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[机器学习入门任务02]]></title>
    <url>%2F%E5%AD%A6%E4%B9%A0%2F%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%2Fbkhomework180920.html</url>
    <content type="text"><![CDATA[实验室学生已经学会Python基本语法了，接下来可以尝试学习数据预处理的一些知识了。本次任务目的：主要是引导学生建立起一个记笔记的习惯。其次是熟悉常用的Python包 近两个星期的学习任务： 在GitHub/GitLab注册账号，较为熟练的使用Git操作。建议使用 GitHub for Desktop 学习markdown，用哪个软件不做要求。以后学习笔记都使用markdown语法。 在GitHub/GitLab上建立一个笔记库。以后的学习笔记都必须上传到库中，我才认为你学会了。（注：如果用GitLab需将库权限设定为public） 学习数据预处理，熟练使用Numpy&amp;pandas&amp;Matplotlib 实战练习：数据包 每步操作，代码，相关注释都要在笔记上有体现能用Jupyter就最好了 压缩包中《宝洁数据》具体任务如图所示 那个洗发水的数据第一步要转成这个样子，这里的每一行，是一笔店铺洗发水销售流水。关于根据数据画什么图？因为不能告知大家具体的项目背景，所以我不做要求，以练手为主。只要笔记里写明白是怎么画的就好。（最好用Jupyter） 根据压缩包中《气象数据》，绘制历年的平均气温变化图，平均降水量变化图，其他自由发挥。 安装CiteSpace ：CiteSpace介绍，在网上找个教程先了解软件的基础操作。 如果用Jupyter：请参考格式1 如果用markdown：请参考格式2 格式3 (说明：格式2 虽然也是使用了Jupyter，但是它主要用的是markdown，下载下来看一遍就知道了) 【注】：建议同学们尽可能多的，把你们的学习总结成文档。（多参考技术类博客的教程是怎么做的）。另：本文介绍的软件我不做强制要求。只要能到达目的就好。比如还可以往GitHub里上传Jupyter的文件，如果有代码的时候最好用Jupyter。 【注2】：同学们做完的可以提前联系我。我好安排下一阶段的任务。]]></content>
      <categories>
        <category>学习</category>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>新手入门任务</tag>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[运行tensorflow出现FutureWarning]]></title>
    <url>%2F%E7%94%9F%E6%B4%BB%2F%E5%B7%A5%E5%85%B7%2F%E7%90%90%E7%A2%8E%2FTensorFlowWarning.html</url>
    <content type="text"><![CDATA[运行tensorflow出现FutureWarning，这个意义不大 在win10 64位运行tensorflow出现问题： 1FutureWarning: Conversion of the second argument of issubdtype from float to np.floating is deprecated. In future, it will be treated as np.float64 == np.dtype(float).type.from ._conv import register_converters as _register_converters。 经过查阅资料,解决方法： 1pip install h5py==2.8.0rc1]]></content>
      <categories>
        <category>生活</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>随手记</tag>
        <tag>琐碎</tag>
        <tag>tensorflow</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[机器学习入门任务01]]></title>
    <url>%2F%E5%AD%A6%E4%B9%A0%2F%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%2Fbkhomework180914.html</url>
    <content type="text"><![CDATA[学习前提：有一定的编程基础（学过C语言基础语法，能熟练使用循环判断等语句，掌握排序算法） 学习任务： 在GitHub/GitLab注册账号，较为熟练的使用Git操作。建议使用 GitHub for Desktop 学习markdown，用哪个软件不做要求。以后学习笔记都使用markdown语法。 在GitHub/GitLab上建立一个笔记库。以后的学习笔记都必须上传到库中，我才认为你学会了。（注：如果用GitLab需将库权限设定为public）笔记的最好用如果用Jupyter：请参考格式1或者是markdown 搭建python环境，强烈建议安装anaconda3+PyCharm 学习Python基础语法，做一个成绩管理系统，至少达到如下需求： 输入并存储学生的信息：通过输入学生的学号、姓名、和分数，然后就可以把数据保存在建立的student文件里面。 打印学生的所有信息：通过一个打印函数就可以把所有的信息打印在屏幕上。 修改学生信息：这个功能首先通过查询功能查询出该学生是否存在，如果存在就对该学生的信息进行修改，如果不存在则返回到主界面。 删除学生信息：该功能是对相应的学生进行删除操作，如果学生存在就查找到进行删除。 按学生成绩进行排序： 这个功能是按照学生的成绩进行排序，对学生的信息进行操作。 查找学生信息：这个功能通过输入学号，查找该学生的信息，如果有该学号就输出该学生的信息，没有该学号就提示输入的学号不存在。 例子 如果用Jupyter：请参考格式1 如果用markdown：请参考格式2 格式3 (说明：格式2 虽然也是使用了Jupyter，但是它主要用的是markdown，下载下来看一遍就知道了) 【注】：建议同学们尽可能多的，把你们的学习总结成文档。（多参考技术类博客的教程是怎么做的）。另：本文介绍的软件我不做强制要求。只要能到达目的就好。比如还可以往GitHub里上传Jupyter的文件，如果有代码的时候最好用Jupyter。 【注2】：同学们做完的可以提前联系我。我好安排下一阶段的任务。]]></content>
      <categories>
        <category>学习</category>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>新手入门任务</tag>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[饥荒作弊命令]]></title>
    <url>%2F%E7%94%9F%E6%B4%BB%2F%E6%B8%B8%E6%88%8F%2F%E9%A5%A5%E8%8D%92.html</url>
    <content type="text"><![CDATA[饥荒作弊命令 123456789# 显示全图minimap = TheSim:FindFirstEntityWithTag("minimap")minimap.MiniMap:ShowArea(0,0,0, 10000)# 将玩家传送到坐标【-55，97】上GetPlayer().Transform:SetPosition(-55,0,97)# 开启上帝建筑模式GetPlayer().components.builder:GiveAllRecipes()]]></content>
      <categories>
        <category>生活</category>
        <category>游戏</category>
      </categories>
      <tags>
        <tag>饥荒</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[开局域网]]></title>
    <url>%2F%E7%94%9F%E6%B4%BB%2F%E5%B7%A5%E5%85%B7%2F%E7%90%90%E7%A2%8E%2F%E5%B1%80%E5%9F%9F%E7%BD%91%E5%91%BD%E4%BB%A4.html</url>
    <content type="text"><![CDATA[在命令行窗口下操作 在cmd命令行窗口下输入以下命令，对方就可以通过WiFi链接进入建立好的局域网。 前提：win10+无线网卡 123netsh wlan set hostednetwork mode=allow ssid=zconding key=12345678netsh wlan start hostednetwork]]></content>
      <categories>
        <category>生活</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>随手记</tag>
        <tag>琐碎</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[OSM地图文件转SUMO]]></title>
    <url>%2F%E5%AD%A6%E4%B9%A0%2F%E4%BA%A4%E9%80%9A%E4%BB%BF%E7%9C%9F%2FSUMO%E6%93%8D%E4%BD%9C%E6%95%99%E7%A8%8B.html</url>
    <content type="text"><![CDATA[将OSM文件转换成可以在SUMO中运行的路网文件 12345netconvert --osm-files map.osm -o map.net.xmlpolyconvert --net-file map.net.xml --osm-files map.osm --type-file typemap.xml -o map.poly.xmlpython "C:/Program Files (x86)/eclipse/Sumo/tools/randomTrips.py" -n map.net.xml -r map.rou.xml -e 100 -l]]></content>
      <categories>
        <category>学习</category>
        <category>交通仿真</category>
      </categories>
      <tags>
        <tag>琐碎</tag>
        <tag>OSM</tag>
        <tag>SUMO</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo相关命令]]></title>
    <url>%2F%E7%94%9F%E6%B4%BB%2F%E5%B7%A5%E5%85%B7%2Fhexo.html</url>
    <content type="text"><![CDATA[Hexo相关命令，以及我对Hexo和Next的修改日志 hexo的apihttps://hexo.io/zh-cn/docs/writing.html hexo的常用命令12345678hexo server -p 4001hexo new [layout] &lt;title&gt;hexo clean hexo g hexo dhexo clean &amp;&amp; hexo g &amp;&amp; hexo dhexo clean &amp;&amp; hexo g &amp;&amp; hexo server -p 4001 评论系统https://ioliu.cn/2017/add-valine-comments-to-your-blog/ 修改日志特定段落缩进 123456789101112// 特定段落(标志ooNoIndent00)缩进// 是因为修改了~\blog\themes\next\source\js\src\bootstaps.js 文件// 添加了下面一段话// 特定段落(标志ooNoIndent00)缩进$('p:contains("ooNoIndent00")').each(function() &#123; var str = $(this).text(); if (str.match("ooNoIndent00")) &#123; var text = $(this).html(); $(this).css('text-indent', '0em'); $(this).html(text.replace('ooNoIndent00', '')); &#125;&#125;); 密码输入 12345678910111213// ~\blog\themes\next\layout\_partials\head.swig&lt;!-- #增加个输入密码的功能 # --&gt;&lt;script&gt; (function()&#123; if('&#123;&#123; page.password &#125;&#125;')&#123; if (prompt('请输入文章密码') !== '&#123;&#123; page.password &#125;&#125;')&#123; alert('密码错误！'); location.href='/' &#125; &#125; &#125;)();&lt;/script&gt; 首页隐藏 1234567891011121314// ~\blog\themes\next\layout\index.swig&lt;!-- #增加个首页隐藏的功能 # --&gt;&#123;% block content %&#125; &lt;section id="posts" class="posts-expand"&gt; &#123;% for post in page.posts %&#125; &#123;% if post.visible !== 'hide' %&#125; &#123;&#123; post_template.render(post, true) &#125;&#125; &#123;% endif %&#125; &#123;% endfor %&#125; &lt;/section&gt; &#123;% include '_partials/pagination.swig' %&#125;&#123;% endblock %&#125; 首行缩进 1234567// ~\blog\themes\next\source\css_custom\custom.styl:// Custom styles.// 设置段落首行缩进（text-indent），调整段落下部间距.post-body p &#123; text-indent: 0em; margin-bottom: 0.8em; &#125; 增加站点搜索功能搜索功能真心好用，当文章多起来的时候，标签提供的作用已经很少了，只能简单索引，搜索却能精确查找，这里我用的依旧是最简单的本地站内搜索。 安装插件 1npm install hexo-generator-searchdb --save 修改站点配置文件 12345search: path: search.xml field: post format: html limit: 10000 修改主题配置文件 12local_search: enable: true 修改hexo文章链接HEXO默认的文章链接形式为domain/year/month/day/postname，默认就是一个四级url，并且可能造成url过长，对搜索引擎是十分不友好的，我们可以改成 domain/postname 的形式。编辑站点_config.yml文件，修改其中的permalink字段改为permalink: :title.html即可。 站点地图https://www.cnblogs.com/php-linux/p/8493181.html]]></content>
      <categories>
        <category>生活</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>随手记</tag>
        <tag>琐碎</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在ubuntu下安装Flow]]></title>
    <url>%2F%E5%AD%A6%E4%B9%A0%2F%E4%BA%A4%E9%80%9A%E4%BB%BF%E7%9C%9F%2FInstall_FLow.html</url>
    <content type="text"><![CDATA[Flow是个基于SUMO的交通仿真程序，但是苦于不支持Windows系统，只支持Linux/MacOS系统。本文就是记录怎安装该软件 flow：Flow是一种用于交通微观仿真的深度RL和控制实验的计算框架。 一、前期环境准备1.1 Ubuntu换源参考链接：https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/ 12sudo cp /etc/apt/sources.list /etc/apt/sources.list.oldsudo gedit /etc/apt/source.list 1.1 安装git1sudo apt-get install gits 1.2 安装Anaconda下载好.sh 文件 然后直接在命令行下运行 anaconda 换源 1234567conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/conda config --set show_channel_urls yes## 设置环境变量gedit ~/.bashrcexport PATH="/opt/STM/STLinux-2.3/devkit/sh4/bin:$PATH" 1.3 安装PyCharm1./******.sh 第一步：安装Flow 123456789git clone https://github.com/flow-project/flow.gitcd flow# create a conda environmentconda env create -f environment.ymlsource activate flowpython setup.py develop./scripts/setup_sumo_ubuntu1604.sh# install flow within the environment]]></content>
      <categories>
        <category>学习</category>
        <category>交通仿真</category>
      </categories>
      <tags>
        <tag>琐碎</tag>
        <tag>ubuntu</tag>
        <tag>环境配置</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GitLab和GitHub的同步]]></title>
    <url>%2F%E7%94%9F%E6%B4%BB%2F%E5%B7%A5%E5%85%B7%2Fgit.html</url>
    <content type="text"><![CDATA[我想可以在GitLab里建库，然后随时可以同步到GitHub上。我使用的是git命令中关于多个远程仓库的命令。在本地有一个GitLab的库后，在git bash内一次输入下面的命令就好。 使用如下命令添加第二个远程仓库。 12345git remote set-url --add oginin http://192.168.100.54/git/gaoxing/gaoxTest.gitgit remote set-url --add oginin http://githubXXXXXhttp://githubXXXXXX : 是在GitHub里的‘clone or download’获得的 查看远程仓库情况。可以看到git上有两个远程仓库的 push 地址。这种方法的好处是每次只需要push 一次就行了。 1git remote -v]]></content>
      <categories>
        <category>生活</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>随手记</tag>
        <tag>琐碎</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[实验室索引]]></title>
    <url>%2F%E7%94%9F%E6%B4%BB%2F%E5%8A%9E%E5%85%AC%2F%E5%AE%9E%E9%AA%8C%E5%AE%A4%E7%B4%A2%E5%BC%95.html</url>
    <content type="text"><![CDATA[实验室导师简介郑皎凌：硕士生导师 【个人简介】 郑皎凌，女，副教授，生于1981年，中共党员，研究生学历，博士学位。学习计算机专业，获计算机科学与技术专业工学博士学位。现任四川省计算机学会大数据专委会委员. 【研究方向】 1．04(全日制)智能信息处理与知识工程 2．01(全日制)大数据分析与服务 【在研项目】 四川省教育厅重点课题，虚拟社会中个体间往复交互模式挖掘及其对虚拟社团形成和发展的影响 项目负责人 【完成项目】 1．社群大规模协作认知规律和演化模型挖掘，国家自然科学基金青年基金项目，项目负责人，2015年12月完成。 基于干预技术的复杂系统可信演化模型挖掘 四川省教育厅青年基金项目，项目负责人，2013年12月完成。 【发表论文】 1、郑皎凌、唐常杰、乔少杰、杨宁、李川、陈瑜、王悦 ，基于扰动的亚复杂动力系统因果关系挖掘 ，计算机学报, 12期,pp 2548-2563, 2014/12/15 ，EI 2、郑皎凌、舒红平、许源平、乔少杰、文立玉 ，基于社群联盟的冲突消解原则求解图着色问题,电子科技大学学报(自科版)，45(1)，pp 2-16，2016/1/1，EI 3、郑皎凌、舒红平、许源平、乔少杰、文立玉 ，Cooperation Oriented Computing: A Computing Model Based on Emergent Dynamics of Group Cooperation ，Big Data Technology and Applications, 2015/12/25-2015/12/26, pp 218-233, 2015/12/25, EI 4、Jiaoling Zheng，Changjie Tang，Shaojie Qiao，Ning Yang，Yue Wang,Mining Multi-scale Intervention Rules from Time Series and Complex Network,《International Journal of Computational Intelligence Systems》 , 2011 , 4 (4) :728-738，SCI 000297795000025 实验室资料索引 本文档主要作为“实验室数据库”的一个检索目录，以及功能介绍，本数据库依托gitlab总共有三方面的功能： 《实验室数据库》的根目录是：https://gitlab.com/CUITDMLab 《实验室数据库》的“代码库”地址是：https://gitlab.com/CUITDMLab/CodeBase 《实验室数据库》的“记录相关的库”地址是：https://gitlab.com/CUITDMLab/BMdocuments 《实验室数据库》的“学习笔记”：https://gitlab.com/CUITDMLab/StudyNotes CodeBase：储存学生期间做项目，打比赛的代码与数据。 实验室代码与数据请放到GitLab群组下：https://gitlab.com/CUITDMLab/CodeBase ，另外完整的项目请单独开一个“项目”，如果是学习代码，比如像学习了《机器学习实战》自己写的课后代码也请在该目录下新建项目。 BMdocuments：记录会议记录、每位同学的工作进度（一周一次）。 会议记录：请fork在项目BMdocuments，会议记录有学生记录并由老师确认后上传到GitLab。会议记录主要写开会的内容，以及每位学生下一周的学习任务。 学生学习进度：请fork在项目BMdocuments，学生不可以修改会议记录文件夹，只可以修改学生工作文件夹中属于自己的文件。学生工作进度分为两个部分：一、老师安排任务的完成情况。二、本周的学习情况（学了什么，有什么问题？） StudyNotes：记录学习笔记，学习经验。 参考 https://github.com/Jack-Lee-Hiter/AlgorithmsByPython 将学习的总结写到库中StudyNotes 实验室学生索引研17级_张中雷 研17级_邹长杰 研18级_蒋洛锋 研18级_赵大楼]]></content>
      <categories>
        <category>生活</category>
        <category>办公</category>
      </categories>
      <tags>
        <tag>实验室索引</tag>
        <tag>导师介绍</tag>
      </tags>
  </entry>
</search>
